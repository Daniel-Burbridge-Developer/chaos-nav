/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as LivetimesIndexImport } from './routes/livetimes/index'
import { Route as LivetimesDONOTUSEImport } from './routes/livetimes/DO NOT USE'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LivetimesIndexRoute = LivetimesIndexImport.update({
  id: '/livetimes/',
  path: '/livetimes/',
  getParentRoute: () => rootRoute,
} as any)

const LivetimesDONOTUSERoute = LivetimesDONOTUSEImport.update({
  id: '/livetimes/DO NOT USE',
  path: '/livetimes/DO NOT USE',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/livetimes/DO NOT USE': {
      id: '/livetimes/DO NOT USE'
      path: '/livetimes/DO NOT USE'
      fullPath: '/livetimes/DO NOT USE'
      preLoaderRoute: typeof LivetimesDONOTUSEImport
      parentRoute: typeof rootRoute
    }
    '/livetimes/': {
      id: '/livetimes/'
      path: '/livetimes'
      fullPath: '/livetimes'
      preLoaderRoute: typeof LivetimesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/livetimes/DO NOT USE': typeof LivetimesDONOTUSERoute
  '/livetimes': typeof LivetimesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/livetimes/DO NOT USE': typeof LivetimesDONOTUSERoute
  '/livetimes': typeof LivetimesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/livetimes/DO NOT USE': typeof LivetimesDONOTUSERoute
  '/livetimes/': typeof LivetimesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/livetimes/DO NOT USE' | '/livetimes'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/livetimes/DO NOT USE' | '/livetimes'
  id: '__root__' | '/' | '/livetimes/DO NOT USE' | '/livetimes/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LivetimesDONOTUSERoute: typeof LivetimesDONOTUSERoute
  LivetimesIndexRoute: typeof LivetimesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LivetimesDONOTUSERoute: LivetimesDONOTUSERoute,
  LivetimesIndexRoute: LivetimesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/livetimes/DO NOT USE",
        "/livetimes/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/livetimes/DO NOT USE": {
      "filePath": "livetimes/DO NOT USE.tsx"
    },
    "/livetimes/": {
      "filePath": "livetimes/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
